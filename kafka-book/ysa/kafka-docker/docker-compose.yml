
version: '3.5'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    #    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    environment:
      # 주피커 식별 ID : 동일 클러스터 내에서 중복되면 안됨
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      # 클러스터 구성시 동기화를 위한 기본 틱 타임(ms)
      ZOOKEEPER_TICK_TIME: 2000
      # 주키퍼 초기화를 위한 제한 시간
      # 마스터 선출을 위해 주피커들이 리더에 커넥션을 맺을때 지정할 초기 타임 아웃 시간
      # Zookeeper Tick TIme * Zookeeper Init Time
      # 멀티 브로커에서 유효한 속성
      ZOOKEEPER_INIT_LIMIT: 5
      # 주키퍼 리더와 나머지 서버들의 싱크 타임
      # 시간 내 싱크응답이 들어오는 경우 클러스터가 정상으로 구성됨을 확인
      #Zookeeper Tick TIme * Zookeeper Sync Limit
      # 멀티 브로커에서 유효한 속성
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    restart: always
    # 서비스 우선순위 지정 : zookeeper가 먼저 실행되어있어야 해당 컨테이너 실행
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      # kafka 브로커 아이디 지정
      KAFKA_BROKER_ID: 1
      # 주키퍼에 커넥션하기 위한 대상 지정
      # zookeeper(서비스이름):2181(내부컨테이너포트)
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # 외부에서 접속하기 위한 리스너 설정
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      #도커 내부에서 사용할 리스너 이름
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      #single 브로커인 경우 1로 설정 필요, 멀티 브로커인 경우 기본값사용하므로 설정 필요 X
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # 컨슈머들이 컨슈머그룹에 조인할 때 대기시간
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

